name:                sweetspot
version:             0.1.0.0
github:              "githubuser/sweetspot"
license:             BSD3
author:              "Author name here"
maintainer:          "example@example.com"
copyright:           "2018 Author name here"

# extra-source-files:
# - README.md

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            Web

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:         Please see the README on GitHub at <https://github.com/githubuser/sweetspot#readme>

dependencies:
- base >= 4.7 && < 5
- aeson
- base64-bytestring
- beam-core
- beam-migrate
- beam-postgres
- cryptonite
- envy
- exceptions
- fast-logger
- hostname-validate
- hspec
- hspec-wai
- http-client
- http-client-tls
- http-media
- http-types
- lens
- lens-aeson
- load-env >= 0.2.1.0
- mtl
- mwc-random
- postgresql-simple
- purescript-bridge
- random
- resource-pool
- rio
- scientific
- servant
- servant-client
- servant-server
- statistics
- time
- transformers
- uuid
- uuid-types
- utf8-string
- wai
- wai-app-static
- wai-cors
- wai-extra
- wai-logger
- warp
- wreq

library:
  source-dirs: src

executables:
  sweetspot-exe:
    main:                Main.hs
    source-dirs:         app
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - sweetspot

  bridge-exe:
    main:                Main.hs
    source-dirs:         bridge
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - sweetspot


tests:
  sweetspot-test:
    main:                Main.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - sweetspot

default-extensions:
  - AutoDeriveTypeable
  - BangPatterns
  - BinaryLiterals
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveDataTypeable
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DoAndIfThenElse
  - EmptyDataDecls
  - ExistentialQuantification
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - InstanceSigs
  - KindSignatures
  - LambdaCase
  - MonadFailDesugaring
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - NoImplicitPrelude
  - OverloadedStrings
  - PartialTypeSignatures
  - PatternGuards
  - PolyKinds
  - RankNTypes
  - RecordWildCards
  - ScopedTypeVariables
  - StandaloneDeriving
  - TupleSections
  - TypeFamilies
  - TypeSynonymInstances
  - ViewPatterns
  - TypeOperators
