#!/bin/bash

print_filesize() {
  FILE_SIZE=$(du -k ../dist/$1 | cut -f1)
  echo "${FILE_SIZE}K -- $2"
}

echo "=> Building PureScript injectables"
START=$(date +%s)

pulp build --main Supple.Main --to ../dist/supple-main.js
if [ $? -ne 0 ]; then
  echo "=> Failed to build main"
  exit 1
fi
echo "=> Finished building main"

pulp build --main Supple.Checkout --to ../dist/supple-checkout.js
if [ $? -ne 0 ]; then
  echo "=> Failed to build checkout"
  exit 1
fi
echo "=> Finished building checkout"

npx --quiet uglify-js --compress --mangle --output ../dist/supple-main.min.js -- ../dist/supple-main.js
if [ $? -ne 0 ]; then
  echo "=> Failed to minify main"
  exit 1
fi

npx --quiet uglify-js --compress --mangle --output ../dist/supple-checkout.min.js -- ../dist/supple-checkout.js
if [ $? -ne 0 ]; then
  echo "=> Failed to minify checkout"
  exit 1
fi

gzip --keep --force ../dist/supple-main.min.js
if [ $? -ne 0 ]; then
  echo "=> Failed to gzip main"
  exit 1
fi

END=$(date +%s)
BUILD_TIME=$(( $END - $START ))
echo "=> Finished build in ${BUILD_TIME}s"
echo "=> Build size main:"
print_filesize "supple-main.js" "Raw Output"
print_filesize "supple-main.min.js" "Minified"
print_filesize "supple-main.min.js.gz" "Minified and Compressed"
rm ../dist/supple-main.min.js.gz

echo "=> Build size:"
print_filesize "supple-checkout.js" "Raw Output"
print_filesize "supple-checkout.min.js" "Minified"
